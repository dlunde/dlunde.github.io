@InProceedings{pmlr-v84-murray18a,
  title = 	 {Delayed Sampling and Automatic Rao-Blackwellization of Probabilistic Programs},
  author = 	 {Lawrence Murray and Daniel Lundén and Jan Kudlicka and David Broman and Thomas Schön},
  booktitle = 	 {Proceedings of the Twenty-First International Conference on Artificial Intelligence and Statistics},
  pages = 	 {1037--1046},
  year = 	 {2018},
  editor = 	 {Amos Storkey and Fernando Perez-Cruz},
  volume = 	 {84},
  series = 	 {Proceedings of Machine Learning Research},
  address = 	 {Playa Blanca, Lanzarote, Canary Islands},
  month = 	 {09--11 Apr},
  publisher = 	 {PMLR},
  pdf = 	 {http://proceedings.mlr.press/v84/murray18a/murray18a.pdf},
  url = 	 {http://proceedings.mlr.press/v84/murray18a.html},
  abstract = 	 {We introduce a dynamic mechanism for the solution of analytically-tractable substructure in probabilistic programs, using conjugate priors and affine transformations to reduce variance in Monte Carlo estimators. For inference with Sequential Monte Carlo, this automatically yields improvements such as locally-optimal proposals and Rao–Blackwellization. The mechanism maintains a directed graph alongside the running program that evolves dynamically as operations are triggered upon it. Nodes of the graph represent random variables, edges the analytically-tractable relationships between them. Random variables remain in the graph for as long as possible, to be sampled only when they are used by the program in a way that cannot be resolved analytically. In the meantime, they are conditioned on as many observations as possible. We demonstrate the mechanism with a few pedagogical examples, as well as a linear-nonlinear state-space model with simulated data, and an epidemiological model with real data of a dengue outbreak in Micronesia. In all cases one or more variables are automatically marginalized out to significantly reduce variance in estimates of the marginal likelihood, in the final case facilitating a random-weight or pseudo-marginal-type importance sampler for parameter estimation. We have implemented the approach in Anglican and a new probabilistic programming language called Birch.}
}

@mastersthesis{lunden2017delayed,
  title = {Delayed Sampling in the Probabilistic Programming Language Anglican},
  author = {Lund\'{e}n, Daniel},
  school = {KTH Royal Institute of Technology},
  year = {2017}
}

@misc{lunden2020correctness,
    title={Correctness of Sequential Monte Carlo Inference for Probabilistic Programming Languages},
    author={Daniel Lundén and Johannes Borgström and David Broman},
    year={2020},
    eprint={2003.05191},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@misc{lunden2018automatic,
    title={Automatic Alignment of Sequential Monte Carlo Inference in Higher-Order Probabilistic Programs},
    author={Daniel Lundén and David Broman and Fredrik Ronquist and Lawrence M. Murray},
    year={2018},
    eprint={1812.07439},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@inproceedings{lunden2018combining,
  author = {Daniel Lund\'{e}n and David Broman and Lawrence M. Murray},
  title = {Combining Static and Dynamic Optimizations Using Closed-Form Solutions},
  booktitle = {Proceedings of the Workshop on Probabilistic Programming Semantics},
  year = {2018},
}
